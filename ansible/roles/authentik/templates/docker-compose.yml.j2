version: '3.4'

services:
  postgresql:
    container_name: authentik-postgresql
    image: "{{ postgresql_image }}:{{ postgresql_image_tag }}"
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "{{ authentik_config.db_name | default('authentik') }}"
      POSTGRES_USER: "{{ authentik_config.db_user | default('authentik') }}"
      POSTGRES_PASSWORD: "{{ authentik_config.db_password }}"

  redis:
    container_name: authentik-redis
    image: "{{ redis_image }}:{{ redis_image_tag }}"
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data

  server:
    container_name: authentik-server
    image: "{{ authentik_image }}:{{ authentik_image_tag }}"
    restart: unless-stopped
    command: server
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      AUTHENTIK_SECRET_KEY: "{{ authentik_config.secret_key }}"
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: "{{ authentik_config.db_user | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_config.db_name | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_config.db_password }}"
      AUTHENTIK_ERROR_REPORTING__ENABLED: "{{ authentik_config.error_reporting | default('false') }}"
      AUTHENTIK_OUTPOSTS_DOCKER__ENABLED: "true"
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "{{ authentik_ldap_port }}:636"
      - "{{ authentik_http_port }}:9000"
      - "{{ authentik_https_port }}:9443"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    container_name: authentik-worker
    image: "{{ authentik_image }}:{{ authentik_image_tag }}"
    restart: unless-stopped
    command: worker
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      AUTHENTIK_SECRET_KEY: "{{ authentik_config.secret_key }}"
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: "{{ authentik_config.db_user | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__NAME: "{{ authentik_config.db_name | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_config.db_password }}"
      AUTHENTIK_ERROR_REPORTING__ENABLED: "{{ authentik_config.error_reporting | default('false') }}"
      AUTHENTIK_BOOTSTRAP_EMAIL: "{{ authentik_config.bootstrap_email }}"
      AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ authentik_config.bootstrap_password }}"
      AUTHENTIK_BOOTSTRAP_TOKEN: "{{ authentik_config.bootstrap_token }}"
      AUTHENTIK_OUTPOSTS_DOCKER__ENABLED: "true"
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  database:
    driver: local
  redis:
    driver: local
