---
- name: Install HAProxy
  pkgng:
    name: haproxy
    state: present
- name: Create haproxy user
  user:
    name: haproxy
    comment: HAProxy server
    uid: 200
    shell: /usr/sbin/nologin
    home: /var/empty
- name: Enable HAProxy service
  service:
    name: haproxy
    enabled: true
- name: Check if HAProxy log file exists
  stat:
    path: /var/log/haproxy.log
  register: haproxy_log
- name: Touch HAProxy log file
  file:
    path: /var/log/haproxy.log
    state: touch
    mode: u=rw,g=r,o=r
    owner: root
    group: '{{ wheel }}'
  notify: 
    - restart syslogd
  when: 'not haproxy_log.stat.exists'
- name: Configure syslog to accept HAProxy logs
  template:
    src: haproxy/syslog.conf.j2
    dest: /etc/syslog.conf
    owner: root
    group: '{{ wheel }}'
    mode: '0644'
  notify: 
    - restart syslogd
- name: Configure extra steps for external host requirements
  block:
    - name: Create download-asn-range script
      template:
        src: download-asn-range.sh.j2
        dest: /usr/local/sbin/download-asn-range
        owner: root
        group: '{{ wheel }}'
        mode: '0700'
    - name: Check if CloudFlare ASN range list exists
      stat:
        path: /usr/local/share/AS13335.dat
      register: cloudflare_asn_file
    - name: Download ASN range list
      shell: /usr/local/sbin/download-asn-range 13335 /usr/local/share/AS13335.dat
      when:
        - 'not cloudflare_asn_file.stat.exists'
    - name: Configure automatic updating of ASN range list
      cron:
        name: Download CloudFlare ASN range list once every 24 hours
        job: /usr/local/sbin/download-asn-range 13335 /usr/local/share/AS13335.dat
        user: root
        minute: 0
        hour: 0
        day: '*'
        month: '*'
        weekday: '*'
  when:
    - haproxy_is_external
- name: Install TLS certificate
  include_role: 
    name: install-cert
  vars:
    web_server_user: haproxy
    web_server_group: haproxy
    web_services:
      - haproxy
- name: Configure HAProxy
  template:
    src: haproxy/haproxy.cfg.j2
    dest: /usr/local/etc/haproxy.conf
    owner: root
    group: '{{ wheel }}'
    mode: '0644'
  notify: 
    - reload haproxy
- name: Start service HAProxy
  ansible.builtin.service:
    name: haproxy
    state: started