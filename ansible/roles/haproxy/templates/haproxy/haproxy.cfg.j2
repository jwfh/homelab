{% for line in warning_comment %}
# {{ line }}
{% endfor %}

global
    log /dev/log local1
    user haproxy
    group haproxy
    daemon
    maxconn 4000
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
{% if not haproxy_is_external %}
    option forwardfor       except 127.0.0.0/8
{% endif %}
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend https
    log /dev/log local0
    bind *:443 ssl crt {{ certificates_local_dir }}/{{ certificate_cn }}.pem
    mode http
    http-response set-header server jwfh
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
{% if haproxy_is_external %}
    acl from_cf src -f /usr/local/share/AS13335.dat
    acl cf_ip_hdr req.hdr(CF-Connecting-IP) -m found
    http-request set-header X-Forwarded-For %[req.hdr(CF-Connecting-IP)] if from_cf cf_ip_hdr
    log-format "%[var(txn.req_cf_cxn_ip)]/%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"
    http-request set-var(txn.req_cf_cxn_ip) req.hdr(CF-Connecting-IP)
{% endif %}

{% for vhost, details in haproxy_backend_services.items() %}
    acl acl_{{ vhost }} hdr(host) -i {{ details.domain_name }}
{% endfor %}    
{% for vhost, details in haproxy_backend_services.items() %}
    use_backend {{ vhost }} if acl_{{ vhost }}
{% endfor %}
    default_backend err_404

{% for vhost, details in haproxy_backend_services.items() %}
backend {{ vhost }}
    mode {{ details.mode }}
    balance {{ details.balance }}
{% for option in (details.options | default({})) %}
    option {{ option }}
{% endfor %}
{% for server in details.servers %}
    server {{ server }} {{ server }}:{{ details.port }} check {{ "ssl verify none" if (details.ssl | d(false)) else "" }} {{ "check-sni " + details.domain_name if (details.check_sni | d(false)) else "" }} {{ "send-proxy-v2" if (details.send_proxy | d(false)) else "" }}
{% endfor %}
{% endfor %}
backend err_404
    mode http
    errorfile 404 /usr/local/share/examples/haproxy/errorfiles/403.http
